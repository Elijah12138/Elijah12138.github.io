{"title":"YOLOV5-ONNX-Flask","uid":"2748178e20072a32602a87f0ad5f4d49","slug":"YOLOV5-ONNX-Flask","date":"2022-07-05T12:46:54.000Z","updated":"2022-07-05T11:50:32.764Z","comments":true,"path":"api/articles/YOLOV5-ONNX-Flask.json","keywords":null,"cover":"https://pic.imgdb.cn/item/62c18f405be16ec74a1693ca.png","content":"<h3 id=\"YOLOV5-ONNX-Flask项目部署\"><a href=\"#YOLOV5-ONNX-Flask项目部署\" class=\"headerlink\" title=\"YOLOV5-ONNX-Flask项目部署\"></a>YOLOV5-ONNX-Flask项目部署</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Pytorch导出ONNX模型可以参考：</p>\n<p><a href=\"https://elijah12138.github.io/post/YOLOV5-Pytorch\">https://elijah12138.github.io/post/YOLOV5-Pytorch</a></p></blockquote>\n<h3 id=\"1-下载项目到本地\"><a href=\"#1-下载项目到本地\" class=\"headerlink\" title=\"1. 下载项目到本地\"></a>1. 下载项目到本地</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>github地址:</p></blockquote>\n<h3 id=\"2-templates文件夹保存网页信息\"><a href=\"#2-templates文件夹保存网页信息\" class=\"headerlink\" title=\"2. templates文件夹保存网页信息\"></a>2. <code>templates</code>文件夹保存网页信息</h3><p><code>index.html</code></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>YOLOV5-ONNX-Flask项目部署<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>YOLOV5-ONNX-Flask项目部署<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; url_for(<span class=\"token punctuation\">'</span>video_feed<span class=\"token punctuation\">'</span>) &#125;&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>960px<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>720px<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-class-names文件夹下保存待检测的类别\"><a href=\"#3-class-names文件夹下保存待检测的类别\" class=\"headerlink\" title=\"3. class.names文件夹下保存待检测的类别\"></a>3. <code>class.names</code>文件夹下保存待检测的类别</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">person\nbicycle\ncar\nmotorcycle\nairplane\nbus\ntrain\ntruck\nboat\ntraffic light\nfire hydrant\nstop sign\nparking meter\nbench\nbird\ncat\ndog\nhorse\nsheep\ncow\nelephant\nbear\nzebra\ngiraffe\nbackpack\numbrella\nhandbag\ntie\nsuitcase\nfrisbee\nskis\nsnowboard\nsports ball\nkite\nbaseball bat\nbaseball glove\nskateboard\nsurfboard\ntennis racket\nbottle\nwine glass\ncup\nfork\nknife\nspoon\nbowl\nbanana\napple\nsandwich\norange\nbroccoli\ncarrot\nhot dog\npizza\ndonut\ncake\nchair\ncouch\npotted plant\nbed\ndining table\ntoilet\ntv\nlaptop\nmouse\nremote\nkeyboard\ncell phone\nmicrowave\noven\ntoaster\nsink\nrefrigerator\nbook\nclock\nvase\nscissors\nteddy bear\nhair drier\ntoothbrush<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-v5-dnn-py-保存调用ONNX模型进行检测的方法\"><a href=\"#4-v5-dnn-py-保存调用ONNX模型进行检测的方法\" class=\"headerlink\" title=\"4. v5_dnn.py 保存调用ONNX模型进行检测的方法\"></a>4. <code>v5_dnn.py</code> 保存调用<code>ONNX</code>模型进行检测的方法</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">yolov5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> modelpath<span class=\"token punctuation\">,</span> confThreshold<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> nmsThreshold<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> objThreshold<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class.names'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>classes <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>num_classes <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> modelpath<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'6.onnx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>inpHeight<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>inpWidth <span class=\"token operator\">=</span> <span class=\"token number\">1280</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1280</span>\n            anchors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">137</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">301</span><span class=\"token punctuation\">,</span> <span class=\"token number\">303</span><span class=\"token punctuation\">,</span> <span class=\"token number\">264</span><span class=\"token punctuation\">,</span> <span class=\"token number\">238</span><span class=\"token punctuation\">,</span> <span class=\"token number\">542</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                       <span class=\"token punctuation\">[</span><span class=\"token number\">436</span><span class=\"token punctuation\">,</span> <span class=\"token number\">615</span><span class=\"token punctuation\">,</span> <span class=\"token number\">739</span><span class=\"token punctuation\">,</span> <span class=\"token number\">380</span><span class=\"token punctuation\">,</span> <span class=\"token number\">925</span><span class=\"token punctuation\">,</span> <span class=\"token number\">792</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n            self<span class=\"token punctuation\">.</span>stride <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">8.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>inpHeight<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>inpWidth <span class=\"token operator\">=</span> <span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token number\">640</span>\n            anchors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198</span><span class=\"token punctuation\">,</span> <span class=\"token number\">373</span><span class=\"token punctuation\">,</span> <span class=\"token number\">326</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n            self<span class=\"token punctuation\">.</span>stride <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">8.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>nl <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>anchors<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>na <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>anchors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n        self<span class=\"token punctuation\">.</span>grid <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>nl\n        self<span class=\"token punctuation\">.</span>anchor_grid <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>anchors<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>nl<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>net <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>dnn<span class=\"token punctuation\">.</span>readNet<span class=\"token punctuation\">(</span>modelpath<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>confThreshold <span class=\"token operator\">=</span> confThreshold\n        self<span class=\"token punctuation\">.</span>nmsThreshold <span class=\"token operator\">=</span> nmsThreshold\n        self<span class=\"token punctuation\">.</span>objThreshold <span class=\"token operator\">=</span> objThreshold\n        self<span class=\"token punctuation\">.</span>_inputNames <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">resize_image</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> srcimg<span class=\"token punctuation\">,</span> keep_ratio<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> dynamic<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        top<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> newh<span class=\"token punctuation\">,</span> neww <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>inpWidth<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>inpHeight\n        <span class=\"token keyword\">if</span> keep_ratio <span class=\"token keyword\">and</span> srcimg<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> srcimg<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            hw_scale <span class=\"token operator\">=</span> srcimg<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> srcimg<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> hw_scale <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                newh<span class=\"token punctuation\">,</span> neww <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>inpHeight<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>inpWidth <span class=\"token operator\">/</span> hw_scale<span class=\"token punctuation\">)</span>\n                img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>srcimg<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>neww<span class=\"token punctuation\">,</span> newh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>INTER_AREA<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> dynamic<span class=\"token punctuation\">:</span>\n                    left <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>inpWidth <span class=\"token operator\">-</span> neww<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n                    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>copyMakeBorder<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>inpWidth <span class=\"token operator\">-</span> neww <span class=\"token operator\">-</span> left<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>BORDER_CONSTANT<span class=\"token punctuation\">,</span>\n                                             value<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># add border</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                newh<span class=\"token punctuation\">,</span> neww <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>inpHeight <span class=\"token operator\">*</span> hw_scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>inpWidth\n                img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>srcimg<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>neww<span class=\"token punctuation\">,</span> newh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>INTER_AREA<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> dynamic<span class=\"token punctuation\">:</span>\n                    top <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>inpHeight <span class=\"token operator\">-</span> newh<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n                    img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>copyMakeBorder<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>inpHeight <span class=\"token operator\">-</span> newh <span class=\"token operator\">-</span> top<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>BORDER_CONSTANT<span class=\"token punctuation\">,</span>\n                                             value<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>srcimg<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>inpWidth<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>inpHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>INTER_AREA<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> img<span class=\"token punctuation\">,</span> newh<span class=\"token punctuation\">,</span> neww<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> left\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_make_grid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nx<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> ny<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        xv<span class=\"token punctuation\">,</span> yv <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>meshgrid<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>ny<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>nx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> np<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>xv<span class=\"token punctuation\">,</span> yv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">preprocess</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n        img <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">255.0</span>\n        <span class=\"token keyword\">return</span> img\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">postprocess</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">,</span> outs<span class=\"token punctuation\">,</span> padsize<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        frameHeight <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        frameWidth <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        newh<span class=\"token punctuation\">,</span> neww<span class=\"token punctuation\">,</span> padh<span class=\"token punctuation\">,</span> padw <span class=\"token operator\">=</span> padsize\n        ratioh<span class=\"token punctuation\">,</span> ratiow <span class=\"token operator\">=</span> frameHeight <span class=\"token operator\">/</span> newh<span class=\"token punctuation\">,</span> frameWidth <span class=\"token operator\">/</span> neww\n        <span class=\"token comment\"># Scan through all the bounding boxes output from the network and keep only the</span>\n        <span class=\"token comment\"># ones with high confidence scores. Assign the box's class label as the class with the highest score.</span>\n\n        confidences <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        boxes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        classIds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> detection <span class=\"token keyword\">in</span> outs<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> detection<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>objThreshold<span class=\"token punctuation\">:</span>\n                scores <span class=\"token operator\">=</span> detection<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n                classId <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">)</span>\n                confidence <span class=\"token operator\">=</span> scores<span class=\"token punctuation\">[</span>classId<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> detection<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n                <span class=\"token keyword\">if</span> confidence <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>confThreshold<span class=\"token punctuation\">:</span>\n                    center_x <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>detection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> padw<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ratiow<span class=\"token punctuation\">)</span>\n                    center_y <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>detection<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> padh<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ratioh<span class=\"token punctuation\">)</span>\n                    width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>detection<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> ratiow<span class=\"token punctuation\">)</span>\n                    height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>detection<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> ratioh<span class=\"token punctuation\">)</span>\n                    left <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>center_x <span class=\"token operator\">-</span> width <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n                    top <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>center_y <span class=\"token operator\">-</span> height <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n\n                    confidences<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>confidence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    boxes<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                    classIds<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>classId<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># Perform non maximum suppression to eliminate redundant overlapping boxes with</span>\n        <span class=\"token comment\"># lower confidences.</span>\n        indices <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>dnn<span class=\"token punctuation\">.</span>NMSBoxes<span class=\"token punctuation\">(</span>boxes<span class=\"token punctuation\">,</span> confidences<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>confThreshold<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>nmsThreshold<span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> indices<span class=\"token punctuation\">:</span>\n            box <span class=\"token operator\">=</span> boxes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            left <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            top <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            width <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n            height <span class=\"token operator\">=</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n            frame <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>drawPred<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> classIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> confidences<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> left <span class=\"token operator\">+</span> width<span class=\"token punctuation\">,</span> top <span class=\"token operator\">+</span> height<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> frame\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">drawPred</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">,</span> classId<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        cv2<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> thickness<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n        label <span class=\"token operator\">=</span> <span class=\"token string\">'%.2f'</span> <span class=\"token operator\">%</span> conf\n        label <span class=\"token operator\">=</span> <span class=\"token string\">'%s:%s'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>classes<span class=\"token punctuation\">[</span>classId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># Display the label at the top of the bounding box</span>\n        labelSize<span class=\"token punctuation\">,</span> baseLine <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>getTextSize<span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        top <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>top<span class=\"token punctuation\">,</span> labelSize<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># cv.rectangle(frame, (left, top - round(1.5 * labelSize[1])), (left + round(1.5 * labelSize[0]), top + baseLine), (255,255,255), cv.FILLED)</span>\n        cv2<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> thickness<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> frame\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> srcimg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        img<span class=\"token punctuation\">,</span> newh<span class=\"token punctuation\">,</span> neww<span class=\"token punctuation\">,</span> padh<span class=\"token punctuation\">,</span> padw <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>resize_image<span class=\"token punctuation\">(</span>srcimg<span class=\"token punctuation\">)</span>\n        blob <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>dnn<span class=\"token punctuation\">.</span>blobFromImage<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> scalefactor<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> swapRB<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># blob = cv2.dnn.blobFromImage(self.preprocess(img))</span>\n        <span class=\"token comment\"># Sets the input to the network</span>\n        self<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span>setInput<span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_inputNames<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># Runs the forward pass to get output of the output layers</span>\n        outs <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span>getUnconnectedOutLayersNames<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># inference output</span>\n        row_ind <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>nl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            h<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>inpHeight <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>inpWidth <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            length <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>na <span class=\"token operator\">*</span> h <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_make_grid<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span>\n\n            outs<span class=\"token punctuation\">[</span>row_ind<span class=\"token punctuation\">:</span>row_ind <span class=\"token operator\">+</span> length<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>outs<span class=\"token punctuation\">[</span>row_ind<span class=\"token punctuation\">:</span>row_ind <span class=\"token operator\">+</span> length<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2.</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">+</span> np<span class=\"token punctuation\">.</span>tile<span class=\"token punctuation\">(</span>\n                self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>na<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            outs<span class=\"token punctuation\">[</span>row_ind<span class=\"token punctuation\">:</span>row_ind <span class=\"token operator\">+</span> length<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>outs<span class=\"token punctuation\">[</span>row_ind<span class=\"token punctuation\">:</span>row_ind <span class=\"token operator\">+</span> length<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>repeat<span class=\"token punctuation\">(</span>\n                self<span class=\"token punctuation\">.</span>anchor_grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">*</span> w<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            row_ind <span class=\"token operator\">+=</span> length\n\n        srcimg <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>postprocess<span class=\"token punctuation\">(</span>srcimg<span class=\"token punctuation\">,</span> outs<span class=\"token punctuation\">,</span> padsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>newh<span class=\"token punctuation\">,</span> neww<span class=\"token punctuation\">,</span> padh<span class=\"token punctuation\">,</span> padw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> srcimg\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    modelpath <span class=\"token operator\">=</span> <span class=\"token string\">'yolov5n.onnx'</span>\n    confThreshold <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span>\n    nmsThreshold <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span>\n    objThreshold <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span>\n\n    yolonet <span class=\"token operator\">=</span> yolov5<span class=\"token punctuation\">(</span>modelpath<span class=\"token punctuation\">,</span> confThreshold<span class=\"token operator\">=</span>confThreshold<span class=\"token punctuation\">,</span> nmsThreshold<span class=\"token operator\">=</span>nmsThreshold<span class=\"token punctuation\">,</span>\n                     objThreshold<span class=\"token operator\">=</span>objThreshold<span class=\"token punctuation\">)</span>\n\n    winName <span class=\"token operator\">=</span> <span class=\"token string\">'Deep learning object detection in OpenCV'</span>\n    cv2<span class=\"token punctuation\">.</span>namedWindow<span class=\"token punctuation\">(</span>winName<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    cap<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">960</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># set video width</span>\n    cap<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">780</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># set video height</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        hasMoreFrame<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> hasMoreFrame <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            srcimg <span class=\"token operator\">=</span> yolonet<span class=\"token punctuation\">.</span>detect<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>winName<span class=\"token punctuation\">,</span> srcimg<span class=\"token punctuation\">)</span>\n            k <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># q键退出</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-app-py保存程序启动信息\"><a href=\"#5-app-py保存程序启动信息\" class=\"headerlink\" title=\"5. app.py保存程序启动信息\"></a>5. <code>app.py</code>保存程序启动信息</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> operator <span class=\"token keyword\">import</span> ne\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template<span class=\"token punctuation\">,</span> Response\n<span class=\"token keyword\">from</span> v5_dnn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> cv2 <span class=\"token keyword\">import</span> getTickCount<span class=\"token punctuation\">,</span> getTickFrequency\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">VideoCamera</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>video <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__del__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_frame</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> image <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> image\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 主页</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">v5_dnn</span><span class=\"token punctuation\">(</span>camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    modelpath <span class=\"token operator\">=</span> <span class=\"token string\">'yolov5n.onnx'</span>\n    confThreshold <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span>\n    nmsThreshold <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span>\n    objThreshold <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span>\n    yolonet <span class=\"token operator\">=</span> yolov5<span class=\"token punctuation\">(</span>modelpath<span class=\"token punctuation\">,</span> confThreshold<span class=\"token operator\">=</span>confThreshold<span class=\"token punctuation\">,</span> nmsThreshold<span class=\"token operator\">=</span>nmsThreshold<span class=\"token punctuation\">,</span>\n                     objThreshold<span class=\"token operator\">=</span>objThreshold<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        frame <span class=\"token operator\">=</span> camera<span class=\"token punctuation\">.</span>get_frame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        yolonet<span class=\"token punctuation\">.</span>detect<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>\n        end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        fps <span class=\"token operator\">=</span> <span class=\"token number\">1.</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span>\n        cv2<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token string\">\"fps= %.2f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>fps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        ret<span class=\"token punctuation\">,</span> jpeg <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imencode<span class=\"token punctuation\">(</span><span class=\"token string\">'.jpg'</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>\n        frame <span class=\"token operator\">=</span> jpeg<span class=\"token punctuation\">.</span>tobytes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token punctuation\">(</span><span class=\"token string\">b'--frame\\r\\n'</span>\n               <span class=\"token string\">b'Content-Type: image/jpeg\\r\\n\\r\\n'</span> <span class=\"token operator\">+</span> frame <span class=\"token operator\">+</span> <span class=\"token string\">b'\\r\\n\\r\\n'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/video_feed'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">video_feed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>v5_dnn<span class=\"token punctuation\">(</span>VideoCamera<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    mimetype<span class=\"token operator\">=</span><span class=\"token string\">'multipart/x-mixed-replace; boundary=frame'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"YOLOV5-ONNX-Flask项目部署 Pytorch导出ONNX模型可以参考： https://elijah12138.github.io/post/YOLOV5-Pytorch 1. 下载项目到本地 github地址: 2. templates文件夹保存网页信息index...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"目标检测","slug":"目标检测","count":3,"path":"api/categories/目标检测.json"},{"name":"机器学习","slug":"目标检测/机器学习","count":3,"path":"api/categories/目标检测/机器学习.json"},{"name":"深度学习","slug":"目标检测/机器学习/深度学习","count":3,"path":"api/categories/目标检测/机器学习/深度学习.json"},{"name":"yolo","slug":"目标检测/机器学习/深度学习/yolo","count":3,"path":"api/categories/目标检测/机器学习/深度学习/yolo.json"}],"tags":[{"name":"机器学习","slug":"机器学习","count":4,"path":"api/tags/机器学习.json"},{"name":"深度学习","slug":"深度学习","count":4,"path":"api/tags/深度学习.json"},{"name":"目标检测","slug":"目标检测","count":3,"path":"api/tags/目标检测.json"},{"name":"yolo","slug":"yolo","count":3,"path":"api/tags/yolo.json"},{"name":"ONNX","slug":"ONNX","count":1,"path":"api/tags/ONNX.json"},{"name":"Flask","slug":"Flask","count":1,"path":"api/tags/Flask.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#YOLOV5-ONNX-Flask%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">YOLOV5-ONNX-Flask项目部署</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%B8%8B%E8%BD%BD%E9%A1%B9%E7%9B%AE%E5%88%B0%E6%9C%AC%E5%9C%B0\"><span class=\"toc-text\">1. 下载项目到本地</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-templates%E6%96%87%E4%BB%B6%E5%A4%B9%E4%BF%9D%E5%AD%98%E7%BD%91%E9%A1%B5%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">2. templates文件夹保存网页信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-class-names%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E4%BF%9D%E5%AD%98%E5%BE%85%E6%A3%80%E6%B5%8B%E7%9A%84%E7%B1%BB%E5%88%AB\"><span class=\"toc-text\">3. class.names文件夹下保存待检测的类别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-v5-dnn-py-%E4%BF%9D%E5%AD%98%E8%B0%83%E7%94%A8ONNX%E6%A8%A1%E5%9E%8B%E8%BF%9B%E8%A1%8C%E6%A3%80%E6%B5%8B%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">4. v5_dnn.py 保存调用ONNX模型进行检测的方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-app-py%E4%BF%9D%E5%AD%98%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">5. app.py保存程序启动信息</span></a></li></ol>","author":{"name":"Elijah","slug":"blog-author","avatar":"https://pic.imgdb.cn/api/avatar","link":"/","description":"在生命的旅途中，要诚挚地珍惜，要深深地疼爱。在生命的旅途中，要努力地追寻，也要保持静观。在生命的旅途中，要有所敬畏，也要有所无惧。","socials":{"github":"https://github.com/Elijah12138?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_40330033?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"YOLOV5-Pytorch","uid":"3e82326fbfb3cfc01a29581e5034be52","slug":"YOLOV5-Pytorch(VOC数据集格式)","date":"2022-07-03T12:46:54.000Z","updated":"2022-07-17T14:29:07.482Z","comments":true,"path":"api/articles/YOLOV5-Pytorch(VOC数据集格式).json","keywords":null,"cover":"https://pic.imgdb.cn/item/62c18f405be16ec74a1693ca.png","text":"YOLOV5-Pytorch(VOC数据集格式)1. 下载官方代码并进行测试1.1 克隆github项目到本地# 已更新到v6.1版本 git clone https:&#x2F;&#x2F;github.com&#x2F;ultralytics&#x2F;yolov5.git ...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"目标检测","slug":"目标检测","count":3,"path":"api/categories/目标检测.json"},{"name":"机器学习","slug":"目标检测/机器学习","count":3,"path":"api/categories/目标检测/机器学习.json"},{"name":"深度学习","slug":"目标检测/机器学习/深度学习","count":3,"path":"api/categories/目标检测/机器学习/深度学习.json"},{"name":"yolo","slug":"目标检测/机器学习/深度学习/yolo","count":3,"path":"api/categories/目标检测/机器学习/深度学习/yolo.json"}],"tags":[{"name":"机器学习","slug":"机器学习","count":4,"path":"api/tags/机器学习.json"},{"name":"深度学习","slug":"深度学习","count":4,"path":"api/tags/深度学习.json"},{"name":"目标检测","slug":"目标检测","count":3,"path":"api/tags/目标检测.json"},{"name":"yolo","slug":"yolo","count":3,"path":"api/tags/yolo.json"}],"author":{"name":"Elijah","slug":"blog-author","avatar":"https://pic.imgdb.cn/api/avatar","link":"/","description":"在生命的旅途中，要诚挚地珍惜，要深深地疼爱。在生命的旅途中，要努力地追寻，也要保持静观。在生命的旅途中，要有所敬畏，也要有所无惧。","socials":{"github":"https://github.com/Elijah12138?tab=repositories","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_40330033?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}